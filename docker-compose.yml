services:
  postgres:
    container_name: postgres
    image: postgres:17.2
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U metric -d metrics" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: "P@ssw0rd"
      PGDATA: "/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    volumes:
      - "./db/init:/docker-entrypoint-initdb.d"
      - "postgres_data:/var/lib/postgresql/data"
    networks:
      - metrics

  app:
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    container_name: app_container
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - metrics
    environment:
      DATABASE_DSN: postgres://metric:password@postgres:5432/metrics?sslmode=disable
      ADDRESS: http://0.0.0.0:8080
      KEY: "test"

  agent:
    build:
      context: .
      dockerfile: docker/agent.Dockerfile
    container_name: agent_container
    depends_on:
      - app
    networks:
      - metrics
    environment:
      ADDRESS: http://app:8080
      REPORT_INTERVAL: 10
      POLL_INTERVAL: 2
      KEY: "test"

volumes:
  postgres_data:

networks:
  metrics:
    driver: bridge